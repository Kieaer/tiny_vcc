name: Build

# Controls when the workflow will run
on:
  push:
# pull_request:

  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.9'
      - run: flutter config --enable-windows-desktop
      - run: flutter build windows
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: build/windows/runner/Release

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.9'
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos
      - run: brew install create-dmg
      - run: ./scripts/create-dmg.sh "build/macos/Build/Products/Release/Tiny VCC.app" TinyVCC.dmg
      - uses: actions/upload-artifact@v3
        with:
          name: macos
          path: TinyVCC.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.9'
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-linux-desktop
      - run: flutter build linux
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: build/linux/x64/release/bundle

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: windows

      - uses: actions/download-artifact@v3
        with:
          name: macos

      - uses: actions/download-artifact@v3
        with:
          name: linux

      - name: Create windows release
        run: |
          DIR=build/windows/runner/Release
          mkdir ${NAME}
          cp VRCQuestTools.unitypackage ${NAME}/${NAME}.unitypackage
          cp LICENSE ${DIR}/
          cp README*.md ${DIR}/
          cd build/windows/runner
          NAME=tiny_vcc-${GITHUB_REF#refs/tags/}
          mv Release ${NAME}
          zip -r ../../../${NAME}.zip ${NAME}

      - name: Create macos release
        run: mv TinyVCC.dmg TinyVCC-${GITHUB_REF#refs/tags/}.dmg

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
            *.dmg
